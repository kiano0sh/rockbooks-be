# Queries definition
type Query {
  self: User!
  authors: [Author]
  author(id: ID!): Author!
  publishers: [Publisher]
  publisher(id: ID!): Publisher!
  books: [Book]
  book(id: ID!): Book!
}

# Mutations definition
type Mutation {
  register(input: RegisterInput!): String!
  login(input: LoginInput!): String!
  refreshToken(input: RefreshTokenInput!): String!
}

type User {
  displayName: String!
  email: String!
  avatar: String
}

type Author {
  name: String!
  surname: String!
  book: [Book!]
  publishers: [Publisher!]
}

type Publisher {
  name: String!
  book: [Book!]
  authors: [Author!]
}

type AudioBook {
  createdBy: User!
  book: Book!
  cursorStarts: Int!
  cursorEnds: Int!
  createdAt: String!
}

type BookPage {
  content: String!
  pageNumber: Int!
}

type Book {
  name: String!
  author: Author!
  publisher: Publisher!
  audios: [AudioBook!]
  pages: [BookPage!]
  createdAt: String!
}

input RegisterInput {
  displayName: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input RefreshTokenInput {
  token: String!
}
